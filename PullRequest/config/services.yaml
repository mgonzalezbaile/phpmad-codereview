# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventSubscriber\PullRequestSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    App\UseCase\ProcessPullRequestCreationPersistDecoration:
        class: App\UseCase\PersistEntityUseCaseDecorator
        public: false
        decorates: App\UseCase\ProcessPullRequestCreation
        decoration_priority: 1
        arguments:
            - '@App\UseCase\ProcessPullRequestCreationPersistDecoration.inner'
            - '@Doctrine\ORM\EntityManagerInterface'

    App\UseCase\ProcessPullRequestCreationTraceDecoration:
        class: App\UseCase\TraceUseCaseDecorator
        public: false
        decorates: App\UseCase\ProcessPullRequestCreation
        decoration_priority: 2
        arguments:
            - '@App\UseCase\ProcessPullRequestCreationTraceDecoration.inner'
            - '@Psr\Log\LoggerInterface'

#   TODO: To decorate services we have to repeat again and again the decoration structure
#    App\UseCase\ProcessPullRequestCreationPersistDecoration:
#        class: App\UseCase\PersistEntityUseCaseDecorator
#        public: false
#        decorates: App\UseCase\ProcessPullRequestCreation
#        decoration_priority: 1
#        arguments:
#            - '@App\UseCase\ProcessPullRequestCreationPersistDecoration.inner'
#            - '@Doctrine\ORM\EntityManagerInterface'
#
#    App\UseCase\ProcessPullRequestCreationTraceDecoration:
#        class: App\UseCase\TraceUseCaseDecorator
#        public: false
#        decorates: App\UseCase\ProcessPullRequestCreation
#        decoration_priority: 2
#        arguments:
#            - '@App\UseCase\ProcessPullRequestCreationTraceDecoration.inner'
#            - '@Psr\Log\LoggerInterface'

    App\Controller\PullRequestController:
        class: App\Controller\PullRequestController
        arguments:
            - '@App\UseCase\ProcessPullRequestCreation'